{"version":3,"file":"static/js/33.1e2d2bb2.chunk.js","mappings":"oQAGaA,EAAOC,EAAAA,GAAAA,GAAH,+CACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAELC,EAAOJ,EAAAA,GAAAA,GAAH,iDACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEPE,GAAUL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,ySACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,UAAUC,CAAtB,IACC,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,YAAYC,MAAxB,IACA,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACR,SAAAF,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,KAAnB,IAQC,SAAAX,GAAC,OAAIA,EAAEC,MAAMS,OAAOE,WAAnB,IAGDC,EAAUd,EAAAA,GAAAA,OAAH,kYACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,UAAUC,CAAtB,IAEJ,SAAAP,GAAC,OAAIA,EAAEC,MAAMa,QAAQC,IAApB,IACM,SAAAf,GAAC,OAAIA,EAAEC,MAAMe,MAAMC,MAAlB,IACT,SAAAjB,GAAC,OAAIA,EAAEC,MAAMS,OAAOQ,KAAnB,IACU,SAAAlB,GAAC,OAAIA,EAAEC,MAAMS,OAAOE,WAAnB,IASY,SAAAZ,GAAC,OAAIA,EAAEC,MAAMS,OAAOE,WAAnB,I,SCkDpC,EAjFqB,WAGnB,OAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBP,GACjBQ,KAAKX,GACLY,OAAM,SAAAX,GACLY,QAAQC,MACRZ,EAASD,GACTD,EAAS,GACV,GACJ,GAAE,CAACG,KAGF,UAACY,EAAA,EAAD,CAAKC,GAAI,MAAOC,GAAI,CAAC,GAArB,WACE,SAACzB,EAAD,CACE0B,KAAK,SACLC,QAAS,0BAAMd,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUa,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAxC,EAFX,sBAMEtB,GAASE,IAAS,qEACnBF,IACC,UAACgB,EAAA,EAAD,CAAKC,GAAI,MAAT,WACE,0BACGjB,EAAMuB,MADT,KACkB,IAAIC,KAAKxB,EAAMyB,cAAcC,cAD/C,QAGA,UAACV,EAAA,EAAD,CAAKC,GAAI,MAAOU,QAAQ,OAAxB,WACE,gBACEC,IACE5B,EAAM6B,YACFlB,EAAAA,GAAiBX,EAAM6B,YACvB,4FAENC,IAAK9B,EAAMuB,MACXQ,QAAQ,OACRC,MAAO,OAGT,UAACtD,EAAD,YACE,UAACK,EAAD,YACE,wCACA,uBAAIiB,EAAMiC,aAAaC,QAAQ,SAEjC,UAACnD,EAAD,YACE,sCACA,uBAAIiB,EAAMmC,eAEZ,UAACpD,EAAD,YACE,oCACA,wBACGiB,EAAMoC,OAAOC,KAAI,YAAmB,IAAhBjC,EAAe,EAAfA,GAAIkC,EAAW,EAAXA,KACvB,OAAO,wBAAcA,GAALlC,EACjB,gBAKT,UAACY,EAAA,EAAD,CAAKC,GAAI,MAAOsB,GAAI,CAAC,GAArB,WACE,SAACvD,EAAD,CAASwD,GAAG,OAAOnB,MAAOb,EAASa,MAAnC,mBAGA,SAACrC,EAAD,CAASwD,GAAG,UAAUnB,MAAOb,EAASa,MAAtC,sBAGA,SAAC,EAAAoB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,cAOb,C,uNCtFDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAIVC,EAAuB,SAChBC,EAAa,kCAEbC,EAAiB,mCAAG,oGACRJ,EAAAA,EAAAA,IAAA,UANH,oBAMG,2BACcC,IAFN,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTR,EAAAA,EAAAA,IAAA,UAZL,gBAYK,kBACGQ,EADH,oBACqBP,EADrB,+CADS,cAC1BI,EAD0B,yBAKzBA,EAASC,MALgB,2CAAH,sDAQlBG,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACMQ,EADN,oBACoBT,EADpB,oBADM,cACvBI,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfK,EAAgB,mCAAG,WAAMD,GAAN,uFACPV,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACMQ,EADN,4BAC4BT,EAD5B,oBADO,cACxBI,EADwB,yBAKvBA,EAASC,MALc,2CAAH,sDAQhBM,EAAiB,mCAAG,WAAMF,GAAN,uFACRV,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACMQ,EADN,4BAC4BT,EAD5B,oBADQ,cACzBI,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-left: ${p => p.theme.space[4]}px;\n`;\nexport const Item = styled.li`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\nexport const LinkNav = styled(Link)`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  margin-right: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.black};\n  transition-property: color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n\n    color: ${p => p.theme.colors.accentColor};\n  }\n`;\nexport const BackBtn = styled.button`\n  font-size: ${p => p.theme.fontSizes.l};\n\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  transition-property: box-shadow, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 2px 2px 12px 2px ${p => p.theme.colors.accentColor};\n  }\n`;\n","//import { useFetchFilm } from 'components/hooks/useFetchDetails';\n\nimport { Box } from 'components/Box/Box';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport * as API from '../../services/API';\nimport { LinkNav, BackBtn, List, Item } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  // Хук для фетча деталей\n  //const film = useFetchFilm();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    API.searchMovieById(id)\n      .then(setMovie)\n      .catch(error => {\n        console.log();\n        setError(error);\n        setMovie([]);\n      });\n  }, [id]);\n\n  return (\n    <Box as={'div'} pl={[7]}>\n      <BackBtn\n        type=\"button\"\n        onClick={() => navigate(location?.state?.from ?? '/')}\n      >\n        Go back\n      </BackBtn>\n      {!movie && error && <p>Something went wrong...Please, try again!</p>}\n      {movie && (\n        <Box as={'div'}>\n          <h2>\n            {movie.title} ({new Date(movie.release_date).getFullYear()})\n          </h2>\n          <Box as={'div'} display=\"flex\">\n            <img\n              src={\n                movie.poster_path\n                  ? API.POSTER_URL + movie.poster_path\n                  : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n              }\n              alt={movie.title}\n              loading=\"lazy\"\n              width={250}\n            />\n\n            <List>\n              <Item>\n                <h3>User score</h3>\n                <p>{movie.vote_average.toFixed(1)}</p>\n              </Item>\n              <Item>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n              </Item>\n              <Item>\n                <h3>Genres</h3>\n                <ul>\n                  {movie.genres.map(({ id, name }) => {\n                    return <li key={id}>{name}</li>;\n                  })}\n                </ul>\n              </Item>\n            </List>\n          </Box>\n          <Box as={'div'} mt={[4]}>\n            <LinkNav to=\"cast\" state={location.state}>\n              Cast\n            </LinkNav>\n            <LinkNav to=\"reviews\" state={location.state}>\n              Reviews\n            </LinkNav>\n            <Suspense fallback={null}>\n              <Outlet />\n            </Suspense>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd8f6c8593dac3d35659165785d083845';\n\nconst TRENDIND_PATH = '/trending/all/day';\nconst SEARCH_PATH = '/search/movie';\nconst SEARCH_ALL_INFO_PATH = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${TRENDIND_PATH}?page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const searchMoviesByName = async search => {\n  const response = await axios.get(\n    `${SEARCH_PATH}?query=${search}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const searchMovieById = async Id => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const searchActorsById = async Id => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const searchReviewsById = async Id => {\n  const response = await axios.get(\n    `${SEARCH_ALL_INFO_PATH}/${Id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n"],"names":["List","styled","p","theme","space","Item","LinkNav","Link","fontSizes","l","fontWeights","medium","colors","black","accentColor","BackBtn","borders","none","radii","normal","white","useState","movie","setMovie","error","setError","id","useParams","navigate","useNavigate","location","useLocation","useEffect","API","then","catch","console","log","Box","as","pl","type","onClick","state","from","title","Date","release_date","getFullYear","display","src","poster_path","alt","loading","width","vote_average","toFixed","overview","genres","map","name","mt","to","Suspense","fallback","axios","API_KEY","SEARCH_ALL_INFO_PATH","POSTER_URL","getTrendingMovies","response","data","searchMoviesByName","search","searchMovieById","Id","searchActorsById","searchReviewsById"],"sourceRoot":""}